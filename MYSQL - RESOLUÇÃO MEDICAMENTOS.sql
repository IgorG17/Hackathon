
CREATE DATABASE UNIMED;

/* CONECTANDO-SE AO BANCO */

USE UNIMED;

/* CRIANDO A TABELA DE CLIENTES */

--------------------------------------------------------------------------------TABELAS CADASTRO PACIENTE----------------------------------------------------------------------------



CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	EMAIL VARCHAR(50),
	CPF VARCHAR(15) UNIQUE,
	SITUAC ENUM('A','I') NOT NULL, --COMENTÁRIO: SITUAC = PACIENTE ATIVO OU PACIENTE INATIVO.
	MOTI_SITUAC VARCHAR(50),
	COD_CARTEIRINHA VARCHAR(60) UNIQUE,
	CELULAR VARCHAR(20) NOT NULL,
	TELEFONE VARCHAR(20)
);

INSERT INTO PACIENTE VALUES(NULL,'JOAO DE SOUZA','M','JOAOA@IG.COM','76567587887','A',NULL,'1234567899','19971409372',NULL);

CREATE TABLE ENDERECO_PACI(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT, 
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	CODCEP VARCHAR(20) NOT NULL,
	ID_PACIENTE INT UNIQUE,

	FOREIGN KEY(ID_PACIENTE)
	REFERENCES PACIENTE(IDPACIENTE)
);

INSERT INTO ENDERECO_PACI VALUES(NULL,'RUA: Antônio Zacarias','JARDIM BRASIL','AMERICANA','SP','13474-200','1');

CREATE TABLE ALERGICOS_PACI(
	IDALERGICO INT PRIMARY KEY AUTO_INCREMENT, 
	TIPO_ALER ENUM('C','M') NOT NULL,
	
	ID_COMPOSICAO INT,

	FOREIGN KEY(ID_COMPOSICAO)
	REFERENCES COMPOSICAO_MEDI(IDCOMPOSICAO),
	
	ID_MEDICAMENTO INT, -- COMENTÁRIO: TABLEA DE MEDICAMENTOS QUE O PACIENTE É ALERGICO, UTILIZADO PARA VALIDAR TANTO MEDICAMENTOS QUANTO COMPOSIÇÕES.

	FOREIGN KEY(ID_MEDICAMENTO)
	REFERENCES MEDICAMENTOS(IDMEDICAMENTO),
	
	ID_PACIENTE INT,

	FOREIGN KEY(ID_PACIENTE)
	REFERENCES PACIENTE(IDPACIENTE)
);

---------------------------------------------------------------------TABELAS CADASTRO COOPERADAS / MEDICOS --------------------------------------------------------------------------

CREATE TABLE COOPERADAS(
	IDCOOPERADA INT PRIMARY KEY AUTO_INCREMENT,
	RAZAO VARCHAR(60) NOT NULL,
	NOME_FANTASIA VARCHAR(60) NOT NULL,
	CNPJ VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(50),
	SITUAC ENUM('A','I') NOT NULL,
	MOTI_SITUAC VARCHAR(50), --COMENTÁRIO: SITUAC = COOPERADAS ATIVO OU PACIENTE INATIVO.
	CELULAR VARCHAR(20),
	TELEFONE VARCHAR(20)
);

INSERT INTO COOPERADAS VALUES(NULL,'CLINICA DE TRATAMENTO LTDA','CLINICA TRATAMENTO','49231130000506','clinica@tratamento.com.br','A',NULL,'19963560375',NULL);

CREATE TABLE ENDERECO_COPE(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT, 
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	CODCEP VARCHAR(20) NOT NULL,
	ID_COOPERADA INT UNIQUE,

	FOREIGN KEY(ID_COOPERADA)
	REFERENCES COOPERADAS(IDCOOPERADA)
);

INSERT INTO ENDERECO_COPE VALUES(NULL,'RUA: José Frigeri','JARDIM BRASIL','AMERICANA','SP','13474-160','1');

SELECT * FROM COOPERADAS 
INNER JOIN ENDERECO_COPE ON COOPERADAS.IDCOOPERADA = ENDERECO_COPE.ID_COOPERADA
INNER JOIN MEDICOS_COPE ON COOPERADAS.IDCOOPERADA = MEDICOS_COPE.ID_COOPERADA



CREATE TABLE MEDICOS_COPE(
	IDMEDICO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(60) NOT NULL,
	CPF VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(50),
	SITUAC ENUM('A','I') NOT NULL, --COMENTÁRIO: SITUAC = COOPERADAS ATIVO OU PACIENTE INATIVO / MEDICOS DAS COOPERADAS PARA REGISTRAR NA TABELA DE GUIA PODENDO SERVIR DE PARAMETRO PARA RELATÓRIOS.
	MOTI_SITUAC VARCHAR(50),
	CELULAR VARCHAR(20),
	TELEFONE VARCHAR(20),
	CRM INT,
	ID_COOPERADA INT,

	FOREIGN KEY(ID_COOPERADA)
	REFERENCES COOPERADAS(IDCOOPERADA)
);

INSERT INTO MEDICOS_COPE VALUES(NULL,'DOUTOR RICARDO MARINHO','39279486206','ricardo@doutor.com.br','A',NULL,'19994485937',NULL,'9485','1');

----------------------------------------------------------------------------TABELAS CADASTRO MEDICAMENTOS----------------------------------------------------------------------------

CREATE TABLE MEDICAMENTOS(
	IDMEDICAMENTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME_FANTASIA VARCHAR(40) NOT NULL,
	DESCRIÇÃO VARCHAR(40) NOT NULL,
	SALDO_TOTAL FLOAT(10,2),
	PERIODO_ESTOQUE VARCHAR(40),
	QTD_LOTES INT,                 --COMENTÁRIO: TABELA DE MEDICAMENTOS É POR COOPERADAS PARA CONSEGUIR FILTRAR AS MOVIMENTAÇÕES DE ESTOQUE DE CADA UMA, GERANDO CONTROLE TOTAL PARA A UNIMED.
	TIPO_MED ENUM('C','A') NOT NULL, -- QTD LOTES, É PQ O MESMO MEDICAMENTO PODE SER DE LOTES E DATAS DE VALIDADE DIFERENTES, TIPO_MED É A DIFERENÇA DE COMPRIMIDO E AMPOLA, PODENDO SERVIR DE FILTROS EM RELATÓRIOS.
	SITUAC ENUM('A','I') NOT NULL,
	MOTI_SITUAC VARCHAR(50),
	ID_COOPERADA INT,

	FOREIGN KEY(ID_COOPERADA)
	REFERENCES COOPERADAS(IDCOOPERADA)
);


INSERT INTO MEDICAMENTOS VALUES(NULL,'Acetazolamida','Acetazolamida','4.5',NULL,'2','C','A',NULL,'1');
INSERT INTO MEDICAMENTOS VALUES(NULL,'PARACETAMOL','PARACETAMOL','2.5',NULL,'1','A','A',NULL,'1');

CREATE TABLE LOTE_MEDI(
	IDLOTE INT PRIMARY KEY AUTO_INCREMENT, 
	COD_LOTE VARCHAR(30) NOT NULL,
	DATA_VALIDADE DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,  --DADA DE VALIDADE DE CADA LOTE, CONTROLE DE ENTREGA DO PRODUTO QUE DEPOIS DE APROVADO O GUIA É GERADO O AGENDAMENTO, NECESSITANDO APENAS INFORMAR O TIPO "R" DE RECEBIDO.
	DATA_ABERTURA DATE,
	ABERTO ENUM('S','N') NOT NULL,
	ID_MEDICAMENTO INT,

	FOREIGN KEY(ID_MEDICAMENTO)
	REFERENCES MEDICAMENTOS(IDMEDICAMENTO),
	
	VINCULADO ENUM('S','N') NOT NULL,  --VALIDA SE ESTÁ VINCULADO AINDA A UM PACIENTE, MOVIMENTAÇÃO QUE É INCIADA NA GUIA E DEPOIS PASSA PELO AGENDAMENTO, QUANDO = "N" O PACIENTE OU INFORMOU AO BOTI QUE NÃO IRIA VIR APLICAR.
	ID_PACIENTE INT,

	FOREIGN KEY(ID_PACIENTE)
	REFERENCES PACIENTE(IDPACIENTE)
);

INSERT INTO LOTE_MEDI VALUES(NULL,'Lote 02','2023-9-04','2022-6-01',NULL,'N','001','S','1');
INSERT INTO LOTE_MEDI VALUES(NULL,'Lote 01','2023-7-04','2022-6-01',NULL,'N','001','S','1');

INSERT INTO LOTE_MEDI VALUES(NULL,'Lote 01','2023-10-09','2022-6-10',NULL,'N','003','3','2','S','1');


CREATE TABLE UNITARIO_MEDI(
	IDUNITARIO INT PRIMARY KEY AUTO_INCREMENT, 
	QTD_MEDICAMENTO INT NOT NULL,
	SALDO_TOTAL FLOAT(10,2) NOT NULL,
	ID_LOTE INT,

	FOREIGN KEY(ID_LOTE)
	REFERENCES LOTE_MEDI(IDLOTE),
	
	VINCULADO ENUM('S','N') NOT NULL,
	ID_PACIENTE INT,

	FOREIGN KEY(ID_PACIENTE)
	REFERENCES PACIENTE(IDPACIENTE)
);

INSERT INTO UNITARIO_MEDI VALUES(NULL,'2','2.0','1','S','1');
INSERT INTO UNITARIO_MEDI VALUES(NULL,'1','2.5','4','S','1');
INSERT INTO UNITARIO_MEDI VALUES(NULL,'1','2.5','3','1');


CREATE TABLE COMPOSICAO_MEDI(
	IDCOMPOSICAO INT PRIMARY KEY AUTO_INCREMENT, 
	COMPOSICAO VARCHAR(50),
	ID_UNITARIO INT,  --TABELA DE COMPOSICAO PARA VINCULAR AOS PACIENTES COM ALERGIAS.

	FOREIGN KEY(ID_UNITARIO)
	REFERENCES UNITARIO_MEDI(IDUNITARIO)
);


-----------------------------------------------------------------------TABELAS NUMERO GUIA / AUTORIZAÇÃO-----------------------------------------------------------------------------

CREATE TABLE GUIA(
	IDGUIA INT PRIMARY KEY AUTO_INCREMENT,
	NUMERO VARCHAR(40) NOT NULL,
	DATA_GUIA DATE NOT NULL,
	DATA_GUIA_VALIDADE DATE NOT NULL, -- 60 DIAS DE VALIDADE A PARTIR DA DATA DA GUIA.
	SITUAC ENUM('A','I') NOT NULL,
	MOTI_SITUAC VARCHAR(50),
	JUSTIFICATIVA VARCHAR(80),  -- A JUSTIFICATIVA É GERADA PELO MEDICO AUDITOR DA UNIMED CASO O RETORNO SEJA NEGATIVO.
	ID_PACIENTE INT,

	FOREIGN KEY(ID_PACIENTE)
	REFERENCES PACIENTE(IDPACIENTE),
	
	ID_MEDICO INT,

	FOREIGN KEY(ID_MEDICO)
	REFERENCES MEDICOS_COPE(IDMEDICO),
	
	ID_COOPERADA INT,   --TABELAS DE MOVIMENTAÇÃO SEMPRE VINCULANDO O MEDICO, PACIENTE, MEDICAMENTO E COOPERADA PARA TER SEMPRE O HISTÓRICO COMPLETO DA OPERAÇÃO.

	FOREIGN KEY(ID_COOPERADA)
	REFERENCES COOPERADAS(IDCOOPERADA),
	
	CORRECAO ENUM('N','S') NOT NULL,
	COD_NF_CORRECAO VARCHAR(20),  --NF DE CORREÇÃO QUANDO É POSSÍVEL REALOCAR O MEDICAMENTO.
	COD_SERIE_CORRECAO VARCHAR(20)
	
);


INSERT INTO GUIA VALUES(NULL,'279845698571','2023-6-25','2022-8-24','A',NULL,NULL,'1','1','1','N',NULL,NULL);
INSERT INTO GUIA VALUES(NULL,'279845698572','2023-6-26','2022-8-25','A',NULL,NULL,'1','1','1','N',NULL,NULL);


CREATE TABLE MEDICAMENTO_GUIA(
	IDMEDGUIA INT PRIMARY KEY AUTO_INCREMENT,
	QTD_MEDICAMENTO INT NOT NULL,
	QTD_ML FLOAT(10,2),
	DESCRICAO VARCHAR(40) NOT NULL,
	
	ID_GUIA INT,
	
	FOREIGN KEY(ID_GUIA)
	REFERENCES GUIA(IDGUIA),
	
	ID_MEDICAMENTO INT,

	FOREIGN KEY(ID_MEDICAMENTO)
	REFERENCES MEDICAMENTOS(IDMEDICAMENTO)
);
	
INSERT INTO MEDICAMENTO_GUIA VALUES(NULL,'2','2.0','01 APLICAÇÃO / NECES. DE DUAS APLICAÇÕES','1','1');
INSERT INTO MEDICAMENTO_GUIA VALUES(NULL,'1','2.5','02 APLICAÇÃO / NECES. DE DUAS APLICAÇÕES','2','1');
	
	
---------------------------------------------------------------------------AGENDAMENTOS----------------------------------------------------------------------------------------------

CREATE TABLE AGENDAMENTO(
	IDAGEN INT PRIMARY KEY AUTO_INCREMENT,
	DATA_AGEN DATE NOT NULL, -- 60 DIAS CORRIGO DE VENCIMENTO DA GUIA.
	DATA_AGEN_INICIAL DATE NOT NULL,
	SITUAC ENUM('T','R','B') NOT NULL,
	RECEBIDO ENUM('S','N') NOT NULL,
	MOTI_SITUAC VARCHAR(50),
	                                        --POR FIM TELA DE AGENDAMENTO PREVIO RESPONSAVEL POR INFORMAR QUE O MEDICAMENTO CHEGOU A CLINICA, SUA SITUAÇÃO "T" = TRANSITO LOGO APOS A GERAÇÃO DA GUIA
	ID_GUIA INT,                            --"R" = RECEBIDO INFORMADO PELA CLINICA QUE FOI ENTREGUE, E O BAIXADO SALVANDO A DATA DE APLICAÇÃO DO PACIENTE, POREM SALVANDO A DATA DO PRIMEIRO AGENDAMENTO PARA REALIZAR 
	                                        --O MAPA COMPLETO DA OPERAÇÃO COM DATA QUE DEVERIA SER FEITO A APLICAÇÃO COM A QUE FOI APLICADA, E CRUZANDO AS OUTRAS INFORMAÇÕES DA TABELA.
	FOREIGN KEY(ID_GUIA)
	REFERENCES GUIA(IDGUIA),
	
	ID_MEDGUIA INT,
	
	FOREIGN KEY(ID_MEDGUIA)
	REFERENCES MEDICAMENTO_GUIA(IDMEDGUIA),
	
	ID_PACIENTE INT,

	FOREIGN KEY(ID_PACIENTE)
	REFERENCES PACIENTE(IDPACIENTE),
	
	ID_MEDICO INT,

	FOREIGN KEY(ID_MEDICO)
	REFERENCES MEDICOS_COPE(IDMEDICO),
	
	ID_COOPERADA INT,

	FOREIGN KEY(ID_COOPERADA)
	REFERENCES COOPERADAS(IDCOOPERADA),
	
	ID_MEDICAMENTO INT,

	FOREIGN KEY(ID_MEDICAMENTO)
	REFERENCES MEDICAMENTOS(IDMEDICAMENTO),
	
	ID_LOTE INT,

	FOREIGN KEY(ID_LOTE)
	REFERENCES LOTE_MEDI(IDLOTE),
	
	ID_UNITARIO INT,

	FOREIGN KEY(ID_UNITARIO)
	REFERENCES UNITARIO_MEDI(IDUNITARIO)
	
);

INSERT INTO AGENDAMENTO VALUES(NULL,'2022-6-26','2022-6-26','B','S',NULL,'1','1','1','1','1','1','1','1');

